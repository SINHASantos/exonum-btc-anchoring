// Copyright 2019 The Exonum Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package exonum.service.btc_anchoring;

import "btc_types.proto";

// Bitcoin public key wrapper.
message BtcPublicKey {
    // Inner Data.
    bytes data = 1;
}

// Bitcoin transaction wrapper.
message BtcTransaction {
    // Inner data.
    bytes data = 1;
}

// Bitcoin transaction input signature wrapper.
message InputSignature {
    // Inner data.    
    bytes data = 1;
}

// Exonum message with the signature for the new anchoring transaction.
message TxSignature {
    // Public key index in the anchoring public keys list.
    uint32 validator = 1;
    // Signed transaction.
    exonum.btc.Transaction transaction = 2;
    // Signed input.
    uint32 input = 3;
    // Signature content.
    exonum.btc.InputSignature input_signature = 4;
}

/// Configuration parameters.
message Config {
    // Type of the used BTC network.
    uint32 network = 1;
    // Bitcoin public keys of validators from from which the current anchoring redeem script can 
    // be calculated.
    repeated exonum.btc.PublicKey anchoring_keys = 2;
    // Interval in blocks between anchored blocks.
    uint64 anchoring_interval = 3;
    // Fee per byte in satoshis.
    uint64 fee = 4;
}
